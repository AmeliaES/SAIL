--------- Make a flat TABLE OF the variables we need FOR analysis ----------------
-- AES 11/01/2024
---- Summary and important features of script:

-- It creates a file called "flat_table_master.csv" in S:\1515 - Postpartum psychosis- physical and mental comorbidity in a national linked d\Exports_from_Eclipse

-- Then another sub table is created which contains only the first WOB for each MAT_ALF_PE, this can be used for analysis on first delieveries.
-- Save this output as flat_table_master_first_del.csv in S:\1515 - Postpartum psychosis- physical and mental comorbidity in a national linked d\Exports_from_Eclipse
-- also FLAT_TABLE_MASTER_FIRST_DEL

-- Note the PEDW data is taken from the SINGLE_DIAG table (contains all diagnoses for all spells and diagnostic positions) which has been subsetted to ICD-10 codes starting with 'F' or from all columns (health conditions) in SAILW1515V.REF_ICD10_PHYSICAL_HEALTH
-- You can include other ICD-10 codes by editing the code that creates SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_TMP

-- Comments on what each column name in the flat tables created is summarised directly below.

----------------------------------------------------------------------------------
--------- 1. FULL OUTER JOIN OF views WITH VARIABLEs we need: --------------------

-- MATERNAL ID: NCCH.MAT_ALF_PE,  PEDW.ALF_PE, WDSD.ALF_PE

---- SAILW1515V.NCCH_CHILD_BIRTHS_20221101_TMP AS NCCH ----
-- CHILD_ID_PE: child identifier to link with other NCCH datasets
-- ALF_PE AS ALF_PE_CHILD: child ID i think?
-- WOB: Week of Birth
-- MAT_AGE: Age of mother at delivery, check this against maternal week of birth as there are errors in this entry
-- BIRTH_ORDER: order of multiple births (mostly 1 as mostly single births)
-- BIRTH_WEIGHT: metric and imperial birth weight
-- BIRTH_WEIGHT_CAT: derived variable extremely low, very low, low, normal, high, very high
-- BREASTFEED_8_WKS_FLG: 1 = breastfed at 6/8 weeks after birth
-- BREASTFEED_BIRTH_FLG: method of feeding established at time of discharge, typically within 1 week. 1 = breastfed
-- DEL_CD: delivery code, mode of delivery for child: elective c-section, normal vertex, forceps low/other etc.
-- DOD AS DOD_CHILD_NCCH: date of death of child
-- ETHNIC_GRP_CD: ethcnic group code (of child?)
-- GEST_AGE: Gestational age AT delivery (weeks) 
-- GEST_AGE_CAT: extremely pre term (may include miscarriage cases), very pre term, pre term, late term
-- GNDR_CD: gender of child I think as F and M are roughly 1:1, also codes for N and 9 and unsure what they are... missing values maybe?
-- HOSP_PROV_SITE_CD_BIRTH: hospital provider site code for the place of birth
-- LABOUR_ONSET_CD: method by which process of labour began
-- MAT_SMOKING_CD: history of cigarette smoking of mother. 0 = non smkoer, 1= gave up in pregnancy, 2 = 0-9 per day etc.
-- PREV_LIVE_BIRTHS: number of live births a woman has had in previous pregnancies, use with PREV_STILLBIRTH to get parity
-- PREV_STILLBIRTH: number of still births woman had in previous pregnancies
-- STILLBIRTH_FLG: 1 = stillbirth
-- TOT_BIRTH_NUM: total number of births (i assume per delivery?)
-- WELSH_BIRTH_FLG: was the mother a resident in wales at time of birth of the child
-- MAT_WOB: maternal week of birth, need this to assess mortality and check the maternal age variable


---- SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP AS PEDW ----
-- PEDW_START_DATE: Admission start date
-- PEDW_END_DATE: Admission end date
-- DIAG_CD_1234: ICD-10 code


---- SAILW1515V.SINGLE_CLEAN_GEO_CHAR_LSOA2011_TMP WDSD ---- 
-------- Note: Unsure if this is the correct table, also LSOA2001? The 2011 is probably the best one to use as this is most up to date.
-- START_DATE and END_DATE: periods when demographic data recorded
-- TOWNSEND_2011_SCORE: Townsend deprivation score 
-- TOWNSEND_2011_QUINTILE: 
-- TOWNSEND_2011_QUINTILE_DESC: Quintile description
-- WELSH_ADDRESS: Whether it is a Welsh LSOA code (might help us determine errors in mothers with missing delivery dates?)
-- WIMD_2014_SCORE: Welsh Index of Multiple Deprivation 
-- WIMD_2014_QUINTILE: 1 = most deprived
-- WIMD_2014_QUINTILE_DESC: Quintile description, 1 = most deprived
-- WIMD_2019_QUINTILE: 1 = most deprived
-- WIMD_2019_QUINTILE_DESC: Quintile description, 1 = most deprived

----------------------------------------------------------------------------------
--------- 2. CREATE additional columns FOR extra variables: ----------------------

-- GAP_WEEKS = WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB): Weeks between admission date and Monday date of birth

-- DOD_MOTHER_ADDE: derived from ADDE DEATH_DT column

---- CASES:
-- CASE_ANY_PPP is coded as CASE_0_14, CASE_15_52, NOT_CASE
		-- CASE_0_14 = ICD10 code in last primary diagnosis is contained in ICD-10 PPP reference table and WOB and admission date is between 0 and 14
		-- CASE_15_52 = ICD10 code in last primary diagnosis is contained in ICD-10 PPP reference table and WOB and admission date is between 15 and 52
		-- NOT_CASE = anyone else
-- CASE_F531: Same as CASE_ANY_PPP but using ICD-10 code F531 instead of all codes in ICD-10 PPP reference table
-- PREV_PSYCH: previous psychiatric admission (ICD10 starting with F) before pregnancy (this variable is created in QC.Rmd)
-- CASE_TYPE: SCZ_LIKE, PPP_LIKE, DRUG_INDUCED or NO_PSYCHOSIS (derived from reference table),
-- note CASE_ANY_PPP and CASE_TYPE can be used in combination to determine NOT_CASEs that have NO_PSYCHOSIS 
-- TOT_BIRTH_NUM_DERIVED: derive this ourselves from concat of maternal ID, child ID and WOB and check against TOT_BIRTH_NUM

-- PARITY: can be derived from PREV_LIVE_BIRTHS and PREV_STILLBIRTHS 
-- HAVE NOT DONE THIS YET- (see notes further down about this, not straightforward)

---- Physical Health Co-morbidities:
--- derive this from ICD-10 admission codes using reference tables, separate binary categorical column for each condition

----------------------------------------------------------------------------------
-- 1. Check join of 3 tables is correct and matches number of IDs we expect
--------------------------------------------------------
-- Instead of a full outer join on NCCH and PEDW we really want a left join, 
-- as we need all IDs available in NCCH, but not IDS in PEDW where there is no ID in NCCH
-- we probably also only want a left join on NCCH and WDSD too

-- First let's re calculate our gold standard number of IDs we expect
-- all IDS in NCCH
SELECT COUNT(DISTINCT NCCH.MAT_ALF_PE)
FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_TMP AS NCCH;
-- 658,057

-- Check the numbers are what we expect
SELECT COUNT (DISTINCT TMP.MAT_ID) FROM (
	SELECT 
		DISTINCT COALESCE (NCCH.MAT_ALF_PE, PEDW.ALF_PE, WDSD.ALF_PE, ADDE.ALF_PE) AS MAT_ID, NCCH.CHILD_ID_PE, PEDW.START_DATE, ADDE.DEATH_DT
	FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_TMP AS NCCH
		LEFT JOIN SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP AS PEDW
			ON NCCH.MAT_ALF_PE = PEDW.ALF_PE
		LEFT JOIN  SAILW1515V.WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011_20230306_TMP WDSD
		ON WDSD.ALF_PE = COALESCE (NCCH.MAT_ALF_PE, PEDW.ALF_PE)
		LEFT JOIN SAILW1515V.ADDE_DEATHS_20230301_TMP ADDE 
		ON ADDE.ALF_PE = COALESCE (NCCH.MAT_ALF_PE, PEDW.ALF_PE, WDSD.ALF_PE)
	WHERE NCCH.MAT_ALF_PE IS NOT NULL
	ORDER BY MAT_ID) AS TMP;
-- 658,057 - correct :-)

-- How many rows?
SELECT COUNT (TMP.MAT_ID) FROM (
	SELECT 
		DISTINCT COALESCE (NCCH.MAT_ALF_PE, PEDW.ALF_PE, WDSD.ALF_PE, ADDE.ALF_PE) AS MAT_ID, NCCH.CHILD_ID_PE, PEDW.START_DATE, ADDE.DEATH_DT
	FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_TMP AS NCCH
		LEFT JOIN SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP AS PEDW
			ON NCCH.MAT_ALF_PE = PEDW.ALF_PE
		LEFT JOIN  SAILW1515V.WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011_20230306_TMP WDSD
		ON WDSD.ALF_PE = COALESCE (NCCH.MAT_ALF_PE, PEDW.ALF_PE)
		LEFT JOIN SAILW1515V.ADDE_DEATHS_20230301_TMP ADDE 
		ON ADDE.ALF_PE = COALESCE (NCCH.MAT_ALF_PE, PEDW.ALF_PE, WDSD.ALF_PE)
	WHERE NCCH.MAT_ALF_PE IS NOT NULL
	ORDER BY MAT_ID) AS TMP;
-- 9,585,736 rows

-- But note how many rows there are for diagnoses
-- to make this easier here we can subset the admissions data to only contain the ICD-10 codes in any of our ICD-10 reference tables,
-- note, I have also included any ICD-10 codes begining with "F" so we can filter by other mental health conditions later
-- ie. Filter PEDW SINGLE_DIAG by the codes in these reference tables or any ICD10 code begining with F

-- First, join PEDW_SINGLE_DIAG data with ethnicity data from PEDW_EPISODE table, join on SPELL_NUM_PE
-- Is SPELL_NUM_PE the same as PERSON_SPELL_NUM_PE?
SELECT DISTINCT SPELL_NUM_PE 
FROM SAILW1515V.PEDW_EPISODE_20230306_TMP
ORDER BY SPELL_NUM_PE;
-- 24,342,693 distinct rows

SELECT DISTINCT PERSON_SPELL_NUM_PE 
FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP
ORDER BY PERSON_SPELL_NUM_PE;
-- 23,790,861

SELECT DISTINCT EPISODE.SPELL_NUM_PE, SINGLE.PERSON_SPELL_NUM_PE 
FROM SAILW1515V.PEDW_EPISODE_20230306_TMP EPISODE
JOIN SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP SINGLE
ON EPISODE.SPELL_NUM_PE = SINGLE.PERSON_SPELL_NUM_PE; 
-- 39 rows
-- From this I would assume SPELL_NUM_PE is not the same as PERSON_SPELL_NUM_PE

-- PEDW_SUPERSPELL table has both columns
SELECT DISTINCT SUPERSPELL.PERSON_SPELL_NUM_PE, SUPERSPELL.SPELL_NUM_PE,  EPISODE.*
FROM SAIL1515V.PEDW_SUPERSPELL_20230306 SUPERSPELL
JOIN SAILW1515V.PEDW_EPISODE_20230306_TMP EPISODE
ON SUPERSPELL.SPELL_NUM_PE = EPISODE.SPELL_NUM_PE;
-- 25,978,344 rows

-- Join with ALF_PE
SELECT DISTINCT SINGLE.ALF_PE, SUPERSPELL.PERSON_SPELL_NUM_PE, SUPERSPELL.SPELL_NUM_PE,  EPISODE.*
FROM SAIL1515V.PEDW_SUPERSPELL_20230306 SUPERSPELL
JOIN SAILW1515V.PEDW_EPISODE_20230306_TMP EPISODE
ON SUPERSPELL.SPELL_NUM_PE = EPISODE.SPELL_NUM_PE
JOIN SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP SINGLE
ON SUPERSPELL.PERSON_SPELL_NUM_PE = SINGLE.PERSON_SPELL_NUM_PE;
-- 25,323,825 rows
-- Dropped some rows, is this because an ALF_PE can have multiple PERSON_SPELL_NUM_PEs?

SELECT ALF_PE, COUNT(DISTINCT PERSON_SPELL_NUM_PE) AS N_SPELLS
FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP
GROUP BY ALF_PE 
ORDER BY N_SPELLS DESC;
-- Yes, I think the drop in rows is because an ALF_PE can have multiple PERSON_SPELL_NUM_PEs

----------------------------------------------------------------------------------
-- Create table to join ethnicity data from hospital admissions to the rest of the hostpial admissions data
CREATE TABLE SAILW1515V.PEDW_ETH_TMP AS (
SELECT TMP.ALF_PE, TMP.ETH_GRP_DERIVED_DESC FROM (
	SELECT DISTINCT SINGLE.ALF_PE, SUPERSPELL.PERSON_SPELL_NUM_PE, SUPERSPELL.SPELL_NUM_PE,  EPISODE.*
	FROM SAIL1515V.PEDW_SUPERSPELL_20230306 SUPERSPELL
	JOIN SAILW1515V.PEDW_EPISODE_20230306_TMP EPISODE
	ON SUPERSPELL.SPELL_NUM_PE = EPISODE.SPELL_NUM_PE
	JOIN SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP SINGLE
	ON SUPERSPELL.PERSON_SPELL_NUM_PE = SINGLE.PERSON_SPELL_NUM_PE) AS TMP)
WITH NO DATA
	DISTRIBUTE BY HASH(ALF_PE);

INSERT INTO SAILW1515V.PEDW_ETH_TMP (
SELECT TMP.ALF_PE, TMP.ETH_GRP_DERIVED_DESC FROM (
	SELECT DISTINCT SINGLE.ALF_PE, SUPERSPELL.PERSON_SPELL_NUM_PE, SUPERSPELL.SPELL_NUM_PE,  EPISODE.*
	FROM SAIL1515V.PEDW_SUPERSPELL_20230306 SUPERSPELL
	JOIN SAILW1515V.PEDW_EPISODE_20230306_TMP EPISODE
	ON SUPERSPELL.SPELL_NUM_PE = EPISODE.SPELL_NUM_PE
	JOIN SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP SINGLE
	ON SUPERSPELL.PERSON_SPELL_NUM_PE = SINGLE.PERSON_SPELL_NUM_PE) AS TMP
);

CREATE TABLE SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_TMP AS (
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	WHERE SUBSTR(PEDW.DIAG_CD_1234, 1, 1) = 'F'
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.AUTOIMMUNE = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.PRE_ECLAM = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.PMS = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.PERI_MENO = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.PCOS = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.ENDOMET = PEDW.DIAG_CD_1234
	ORDER BY ALF_PE, START_DATE)
WITH NO DATA
	DISTRIBUTE BY HASH(ALF_PE);

INSERT INTO  SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_TMP ( 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	WHERE SUBSTR(PEDW.DIAG_CD_1234, 1, 1) = 'F'
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.AUTOIMMUNE = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.PRE_ECLAM = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.PMS = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.PERI_MENO = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.PCOS = PEDW.DIAG_CD_1234
	UNION 
	SELECT DISTINCT PEDW.ALF_PE, PEDW.START_DATE, PEDW.END_DATE, PEDW.DIAG_CD_1234
	FROM SAILW1515V.PEDW_SINGLE_DIAG_20230306_TMP PEDW
	INNER JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH REFTAB ON REFTAB.ENDOMET = PEDW.DIAG_CD_1234
	ORDER BY ALF_PE, START_DATE);


-- Join with ethnicity data
CREATE TABLE SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_ETH_TMP AS (
	SELECT TMP.ALF_PE, TMP.START_DATE, TMP.END_DATE, TMP.DIAG_CD_1234, TMP.ETH_GRP_DERIVED_DESC FROM (
		SELECT SINGLE.*, ETH.ALF_PE AS ID, ETH.ETH_GRP_DERIVED_DESC
		FROM SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_TMP SINGLE
		LEFT JOIN SAILW1515V.PEDW_ETH_TMP ETH
		ON SINGLE.ALF_PE = ETH.ALF_PE) AS TMP )
WITH NO DATA
DISTRIBUTE BY HASH(ALF_PE);

INSERT INTO SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_ETH_TMP (
	SELECT TMP.ALF_PE, TMP.START_DATE, TMP.END_DATE, TMP.DIAG_CD_1234, TMP.ETH_GRP_DERIVED_DESC FROM (
		SELECT SINGLE.*, ETH.ALF_PE AS ID, ETH.ETH_GRP_DERIVED_DESC
		FROM SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_TMP SINGLE
		LEFT JOIN SAILW1515V.PEDW_ETH_TMP ETH
		ON SINGLE.ALF_PE = ETH.ALF_PE) AS TMP );

-- Check row nums
SELECT COUNT(*)
FROM SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_TMP;
-- 4,670,241

SELECT COUNT(*)
FROM SAILW1515V.PEDW_ETH_TMP;
-- 25,323,825

SELECT COUNT(*)
FROM SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_ETH_TMP;
-- 31,487,254

-- This is alot more rows.
-- Do some people have more than one ethnicity code?

SELECT N, COUNT(N) FROM (
	SELECT DISTINCT ALF_PE, COUNT(DISTINCT ETH_GRP_DERIVED_DESC) N
	FROM SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_ETH_TMP
	GROUP BY ALF_PE) TMP
GROUP BY N
ORDER BY N DESC;

SELECT DISTINCT ALF_PE, COUNT(DISTINCT ETH_GRP_DERIVED_DESC) N
	FROM SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_ETH_TMP
	GROUP BY ALF_PE
	ORDER BY N DESC;

-- Explore this futher in R later.
SELECT *
FROM SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_ETH_TMP;
-- Data exported as "PEDW_SINGLE_DIAG_SUBSET_ETH_TMP.csv" to S:\1515 - Postpartum psychosis- physical and mental comorbidity in a national linked d\Exports_from_Eclipse
-- Right click results view and click on Export data
	
----------------------------------------------------
-- Create a table that includes a variable for delivery number from the births data set
-- (A table of first deliveries only can later be made by filtering DELIVERY_NUM == 1)
-- Join with SAILW1515V.NCCH_CHILD_TRUST_20221101_TMP to get MAT_WOB (this is used to QC maternal age later)

-- Some people may have multiple different WOBs? Which would be an error!
SELECT N, COUNT (N)
	FROM (SELECT DISTINCT MAT_ALF_PE, COUNT(DISTINCT MAT_WOB) AS N
	FROM SAILW1515V.NCCH_CHILD_TRUST_20221101_TMP
	GROUP BY MAT_ALF_PE
	ORDER BY N DESC) AS TMP
GROUP BY N
ORDER BY N DESC;
-- 3,315 people have >1 different WOBs (maybe one of them is an empty character string or NULL?)
-- 654,295 have just one WOB (good! that is most people!)
-- 936 do not have a WOB

-- Therefore, ensure the join of maternal WOB is done after calculating delivery number. Else this will calculate the incorrect delivery number. 
-- Also note how we use DENSE_RANK() instead of RANK()
-- This is really important when it comes to getting the correct delivery number for births in deliveries following deliveries of multiple births
-- RANK() assigns the same rank to duplicate values in the order specified (ie. multiple births) which then results in gaps in the ranking sequence
-- Whereas DENSE_RANK() does not skip any numbers meaning we get the true delivery numbers for mothers that have multiple births.

CREATE TABLE SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP AS (
SELECT NCCH_BIRTHS.*, NCCH_TRUST.MAT_WOB
FROM 
	(SELECT NCCH_BIRTHS.*,
	DENSE_RANK() OVER (PARTITION BY NCCH_BIRTHS.MAT_ALF_PE ORDER BY NCCH_BIRTHS.WOB) AS DELIVERY_NUM
	FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_TMP NCCH_BIRTHS) AS NCCH_BIRTHS	
	LEFT JOIN SAILW1515V.NCCH_CHILD_TRUST_20221101_TMP NCCH_TRUST
	ON NCCH_BIRTHS.MAT_ALF_PE = NCCH_TRUST.MAT_ALF_PE
	ORDER BY MAT_ALF_PE, WOB)
	WITH NO DATA
	DISTRIBUTE BY HASH(MAT_ALF_PE);

INSERT INTO SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP ( 
SELECT NCCH_BIRTHS.*, NCCH_TRUST.MAT_WOB
FROM 
	(SELECT NCCH_BIRTHS.*,
	DENSE_RANK() OVER (PARTITION BY NCCH_BIRTHS.MAT_ALF_PE ORDER BY NCCH_BIRTHS.WOB) AS DELIVERY_NUM
	FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_TMP NCCH_BIRTHS) AS NCCH_BIRTHS	
	LEFT JOIN SAILW1515V.NCCH_CHILD_TRUST_20221101_TMP NCCH_TRUST
	ON NCCH_BIRTHS.MAT_ALF_PE = NCCH_TRUST.MAT_ALF_PE
	ORDER BY MAT_ALF_PE, WOB
);


----------------------------------------------------
-- Check total number of births in first delivery (to create gold standard number to compare against if we ever filter to first deliveries):
SELECT DISTINCT MAT_ALF_PE, CHILD_ID_PE
FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP
WHERE DELIVERY_NUM = 1
ORDER BY MAT_ALF_PE;
-- 669,097

SELECT DISTINCT MAT_ALF_PE, CHILD_ID_PE
FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP
ORDER BY MAT_ALF_PE;
-- 1,461,623 total births for all deliveries

SELECT DISTINCT MAT_ALF_PE, CHILD_ID_PE
FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP
WHERE MAT_ALF_PE IS NOT NULL
ORDER BY CHILD_ID_PE;
-- 1,228,803
-- Where MAT_ALF_PE is not NULL, 

--------------------------------------------------------
-- Create tables for each joined dataset and drop them after the final join is done
--NCCH:

CREATE TABLE SAILW1515V.NCCH_PEDW_TMP AS (
	SELECT 
		NCCH.MAT_ALF_PE,
		PEDW.ALF_PE,
		NCCH.CHILD_ID_PE, 
		NCCH.ALF_PE AS ALF_PE_CHILD,
		NCCH.WOB,
		NCCH.MAT_AGE,
		NCCH.BIRTH_ORDER,
		NCCH.BIRTH_WEIGHT,
		NCCH.BIRTH_WEIGHT_CAT,
		NCCH.BREASTFEED_8_WKS_FLG,
		NCCH.BREASTFEED_BIRTH_FLG,
		NCCH.DEL_CD,
		NCCH.DOD AS DOD_CHILD_NCCH,
		NCCH.ETHNIC_GRP_CD,
		NCCH.GEST_AGE,
		NCCH.GEST_AGE_CAT,
		NCCH.GNDR_CD,
		NCCH.HOSP_PROV_SITE_CD_BIRTH,
		NCCH.LABOUR_ONSET_CD,
		NCCH.MAT_SMOKING_CD,
		NCCH.PREV_LIVE_BIRTHS,
		NCCH.PREV_STILLBIRTH,
		NCCH.STILLBIRTH_FLG,
		NCCH.TOT_BIRTH_NUM,
		NCCH.WELSH_BIRTH_FLG,
		NCCH.MAT_WOB,
		NCCH.DELIVERY_NUM,
		(SELECT COUNT(DISTINCT SELF_TMP.CHILD_ID_PE )
			FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP AS SELF_TMP
			WHERE NCCH.MAT_ALF_PE = SELF_TMP.MAT_ALF_PE
				AND NCCH.WOB = SELF_TMP.WOB
			) AS TOT_BIRTH_NUM_DERIVED,
		PEDW.START_DATE AS PEDW_START_DATE,
		PEDW.END_DATE AS PEDW_END_DATE,
		PEDW.DIAG_CD_1234,
		WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) AS GAP_WEEKS,
		CASE
			WHEN EXISTS (
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PSYCHOSIS CODES
				WHERE CODES.ICD10_CODE = PEDW.DIAG_CD_1234 
			) THEN 
				CASE
					WHEN WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) BETWEEN 0 AND 14 THEN 'PPP_0_14'
					WHEN WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) BETWEEN 15 AND 52 THEN 'PPP_15_52'
					ELSE 'NOT_CASE'
				END
			ELSE 'NOT_CASE'
			END AS CASE_ANY_PPP,
		CASE 
			WHEN PEDW.DIAG_CD_1234 = 'F531' AND  WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) BETWEEN 0 AND 14 THEN 'F531_0_14'
			WHEN PEDW.DIAG_CD_1234 = 'F531'AND WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) BETWEEN 15 AND 52 THEN 'F531_15_52'
			ELSE 'NOT_CASE'
		END AS CASE_F531,
		CASE
			WHEN EXISTS (
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PSYCHOSIS_CLUSTER CODES_TYPE
				WHERE CODES_TYPE.DRUG_INDUCED = PEDW.DIAG_CD_1234 
			) THEN 'DRUG_INDUCED'
						WHEN EXISTS (
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PSYCHOSIS_CLUSTER CODES_TYPE
				WHERE CODES_TYPE.SCZ_LIKE = PEDW.DIAG_CD_1234 
			) THEN 'SCZ_LIKE'
						WHEN EXISTS (
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PSYCHOSIS_CLUSTER CODES_TYPE
				WHERE CODES_TYPE.PPP_LIKE = PEDW.DIAG_CD_1234 
			) THEN 'PPP_LIKE'
			ELSE 'NO_PSYCHOSIS'
			END AS CASE_CLUSTER_TYPE,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.AUTOIMMUNE = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_AUTOIMMUNE,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.PRE_ECLAM = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_PRE_ECLAM,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.PMS = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_PMS,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.PERI_MENO = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_PERI_MENO,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.PCOS = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_PCOS,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.ENDOMET = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_ENDOMET
		FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP AS NCCH
			LEFT JOIN SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_TMP AS PEDW
				ON NCCH.MAT_ALF_PE = PEDW.ALF_PE
		WHERE 
			NCCH.MAT_ALF_PE IS NOT NULL 
		)
	WITH NO DATA
	DISTRIBUTE BY HASH(MAT_ALF_PE);


INSERT INTO  SAILW1515V.NCCH_PEDW_TMP ( 
SELECT 
		NCCH.MAT_ALF_PE,
		PEDW.ALF_PE,
		NCCH.CHILD_ID_PE, 
		NCCH.ALF_PE AS ALF_PE_CHILD,
		NCCH.WOB,
		NCCH.MAT_AGE,
		NCCH.BIRTH_ORDER,
		NCCH.BIRTH_WEIGHT,
		NCCH.BIRTH_WEIGHT_CAT,
		NCCH.BREASTFEED_8_WKS_FLG,
		NCCH.BREASTFEED_BIRTH_FLG,
		NCCH.DEL_CD,
		NCCH.DOD AS DOD_CHILD_NCCH,
		NCCH.ETHNIC_GRP_CD,
		NCCH.GEST_AGE,
		NCCH.GEST_AGE_CAT,
		NCCH.GNDR_CD,
		NCCH.HOSP_PROV_SITE_CD_BIRTH,
		NCCH.LABOUR_ONSET_CD,
		NCCH.MAT_SMOKING_CD,
		NCCH.PREV_LIVE_BIRTHS,
		NCCH.PREV_STILLBIRTH,
		NCCH.STILLBIRTH_FLG,
		NCCH.TOT_BIRTH_NUM,
		NCCH.WELSH_BIRTH_FLG,
		NCCH.MAT_WOB,
		NCCH.DELIVERY_NUM,
		(SELECT COUNT(DISTINCT SELF_TMP.CHILD_ID_PE )
			FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP AS SELF_TMP
			WHERE NCCH.MAT_ALF_PE = SELF_TMP.MAT_ALF_PE
				AND NCCH.WOB = SELF_TMP.WOB
			) AS TOT_BIRTH_NUM_DERIVED,
		PEDW.START_DATE AS PEDW_START_DATE,
		PEDW.END_DATE AS PEDW_END_DATE,
		PEDW.DIAG_CD_1234,
		WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) AS GAP_WEEKS,
		CASE
			WHEN EXISTS (
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PSYCHOSIS CODES
				WHERE CODES.ICD10_CODE = PEDW.DIAG_CD_1234 
			) THEN 
				CASE
					WHEN WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) BETWEEN 0 AND 14 THEN 'PPP_0_14'
					WHEN WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) BETWEEN 15 AND 52 THEN 'PPP_15_52'
					ELSE 'NOT_CASE'
				END
			ELSE 'NOT_CASE'
			END AS CASE_ANY_PPP,
		CASE 
			WHEN PEDW.DIAG_CD_1234 = 'F531' AND  WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) BETWEEN 0 AND 14 THEN 'F531_0_14'
			WHEN PEDW.DIAG_CD_1234 = 'F531'AND WEEKS_BETWEEN(PEDW.START_DATE, NCCH.WOB) BETWEEN 15 AND 52 THEN 'F531_15_52'
			ELSE 'NOT_CASE'
		END AS CASE_F531,
		CASE
			WHEN EXISTS (
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PSYCHOSIS_CLUSTER CODES_TYPE
				WHERE CODES_TYPE.DRUG_INDUCED = PEDW.DIAG_CD_1234 
			) THEN 'DRUG_INDUCED'
						WHEN EXISTS (
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PSYCHOSIS_CLUSTER CODES_TYPE
				WHERE CODES_TYPE.SCZ_LIKE = PEDW.DIAG_CD_1234 
			) THEN 'SCZ_LIKE'
						WHEN EXISTS (
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PSYCHOSIS_CLUSTER CODES_TYPE
				WHERE CODES_TYPE.PPP_LIKE = PEDW.DIAG_CD_1234 
			) THEN 'PPP_LIKE'
			ELSE 'NO_PSYCHOSIS'
			END AS CASE_CLUSTER_TYPE,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.AUTOIMMUNE = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_AUTOIMMUNE,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.PRE_ECLAM = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_PRE_ECLAM,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.PMS = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_PMS,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.PERI_MENO = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_PERI_MENO,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.PCOS = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_PCOS,
		CASE 
			WHEN EXISTS ( 
				SELECT 1
				FROM SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES_HEALTH
				WHERE CODES_HEALTH.ENDOMET = PEDW.DIAG_CD_1234 
			) THEN 'CASE'
			ELSE 'NOT_CASE'
			END AS HEALTH_ENDOMET
		FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP AS NCCH
			LEFT JOIN SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_TMP AS PEDW
				ON NCCH.MAT_ALF_PE = PEDW.ALF_PE
		WHERE 
			NCCH.MAT_ALF_PE IS NOT NULL 
);

--------------------------------------------------------
---- Add DOD columns
-- DOD_MOTHER_ADDE: derived from ADDE DEATH_DT column
CREATE TABLE SAILW1515V.NCCH_PEDW_ADDE_TMP AS ( 
	SELECT NCCH_PEDW.*,
			ADDE.DEATH_DT AS DOD_MOTHER_ADDE
	FROM SAILW1515V.NCCH_PEDW_TMP AS NCCH_PEDW
				LEFT JOIN  SAILW1515V.ADDE_DEATHS_20230301_TMP AS ADDE
				ON ADDE.ALF_PE = NCCH_PEDW.MAT_ALF_PE
	WHERE NCCH_PEDW.MAT_ALF_PE IS NOT NULL
)
	WITH NO DATA
	DISTRIBUTE BY HASH(MAT_ALF_PE);


INSERT INTO SAILW1515V.NCCH_PEDW_ADDE_TMP ( 
	SELECT NCCH_PEDW.*,
				ADDE.DEATH_DT AS DOD_MOTHER_ADDE
		FROM SAILW1515V.NCCH_PEDW_TMP AS NCCH_PEDW
					LEFT JOIN  SAILW1515V.ADDE_DEATHS_20230301_TMP AS ADDE
					ON ADDE.ALF_PE = NCCH_PEDW.MAT_ALF_PE
		WHERE NCCH_PEDW.MAT_ALF_PE IS NOT NULL
);

--------------------------------------------------------
-- Create a writable table for combined flat table

CREATE TABLE SAILW1515V.FLAT_TABLE_PREP AS (
	SELECT 
		NCCH_PEDW_ADDE.*,
		WDSD.START_DATE,
		WDSD.END_DATE,
		WDSD.TOWNSEND_2011_SCORE,
		WDSD.TOWNSEND_2011_QUINTILE,
		WDSD.TOWNSEND_2011_QUINTILE_DESC,
		WDSD.WELSH_ADDRESS,
		WDSD.WIMD_2014_SCORE,
		WDSD.WIMD_2014_QUINTILE,
		WDSD.WIMD_2014_QUINTILE_DESC,
		WDSD.WIMD_2019_QUINTILE,
		WDSD.WIMD_2019_QUINTILE_DESC
		FROM SAILW1515V.NCCH_PEDW_ADDE_TMP AS NCCH_PEDW_ADDE
			LEFT JOIN  SAILW1515V.WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011_20230306_TMP AS WDSD
			ON WDSD.ALF_PE = NCCH_PEDW_ADDE.MAT_ALF_PE
		WHERE 
			NCCH_PEDW_ADDE.MAT_ALF_PE IS NOT NULL AND (
			(NCCH_PEDW_ADDE.WOB BETWEEN WDSD.START_DATE AND WDSD.END_DATE) -- this ensures WOB matches the same date for the depreivation index measure
			OR (WDSD.ALF_PE IS NULL) 							 -- includes people that might not have data in WDSD table
			OR (NCCH_PEDW_ADDE.WOB < WDSD.START_DATE) 					 -- Keep people who's WOB occurs before the start date where deprivation is measured
			OR (NCCH_PEDW_ADDE.WOB > WDSD.END_DATE))						 -- Keep people who's WOB occurs after the start date where deprivation is measured
		ORDER BY MAT_ALF_PE, WOB, START_DATE, PEDW_START_DATE 
		)
	WITH NO DATA
	DISTRIBUTE BY HASH(MAT_ALF_PE);

INSERT INTO SAILW1515V.FLAT_TABLE_PREP ( 
	SELECT 
		NCCH_PEDW_ADDE.*,
		WDSD.START_DATE,
		WDSD.END_DATE,
		WDSD.TOWNSEND_2011_SCORE,
		WDSD.TOWNSEND_2011_QUINTILE,
		WDSD.TOWNSEND_2011_QUINTILE_DESC,
		WDSD.WELSH_ADDRESS,
		WDSD.WIMD_2014_SCORE,
		WDSD.WIMD_2014_QUINTILE,
		WDSD.WIMD_2014_QUINTILE_DESC,
		WDSD.WIMD_2019_QUINTILE,
		WDSD.WIMD_2019_QUINTILE_DESC
		FROM SAILW1515V.NCCH_PEDW_ADDE_TMP AS NCCH_PEDW_ADDE
			LEFT JOIN  SAILW1515V.WDSD_SINGLE_CLEAN_GEO_CHAR_LSOA2011_20230306_TMP AS WDSD
			ON WDSD.ALF_PE = NCCH_PEDW_ADDE.MAT_ALF_PE
		WHERE 
			NCCH_PEDW_ADDE.MAT_ALF_PE IS NOT NULL AND (
			(NCCH_PEDW_ADDE.WOB BETWEEN WDSD.START_DATE AND WDSD.END_DATE) -- this ensures WOB matches the same date for the depreivation index measure
			OR (WDSD.ALF_PE IS NULL) 							 -- includes people that might not have data in WDSD table
			OR (NCCH_PEDW_ADDE.WOB < WDSD.START_DATE) 					 -- Keep people who's WOB occurs before the start date where deprivation is measured
			OR (NCCH_PEDW_ADDE.WOB > WDSD.END_DATE))						 -- Keep people who's WOB occurs after the start date where deprivation is measured
		ORDER BY MAT_ALF_PE, WOB, START_DATE, PEDW_START_DATE 
);
/*END */

-- Test that worked:
SELECT COUNT (DISTINCT TMP.MAT_ALF_PE) FROM (
	SELECT * FROM SAILW1515V.FLAT_TABLE_PREP
	ORDER BY MAT_ALF_PE) AS TMP;
-- Should be 658,057

SELECT * 
FROM SAILW1515V.FLAT_TABLE_PREP
ORDER BY MAT_ALF_PE;
-- 14,774,365 rows

----------------------------------------------------
-- This is still a lot of data to save as a csv and read into R for analysis
--- Reduce rows:
-- Note how the deprivation scores are over various time points
-- Keep rows where WOB occurs after demographic data start date (ie. WOB occurs during the demographic date range or after it), 
-- but only if that mother has that data, else keep all her rows of demographic data
-- Note how we use the child ID, not the mother ID in this code to ensure no children are dropped.

SELECT COUNT MAT_ALF_PE
FROM SAILW1515V.FLAT_TABLE_PREP
WHERE (WOB >= START_DATE) 
	OR (CHILD_ID_PE NOT IN (
		SELECT CHILD_ID_PE 
		FROM SAILW1515V.FLAT_TABLE_PREP
		WHERE WOB >= START_DATE));
-- 9,794,025 rows, which may be easier for R to handle

-- DROP TABLE SAILW1515V.FLAT_TABLE_MASTER;

CREATE TABLE SAILW1515V.FLAT_TABLE_MASTER AS (
SELECT *
FROM SAILW1515V.FLAT_TABLE_PREP F
WHERE (WOB >= START_DATE) 
		OR (CHILD_ID_PE NOT IN (
			SELECT CHILD_ID_PE 
			FROM SAILW1515V.FLAT_TABLE_PREP
			WHERE WOB >= START_DATE))
	ORDER BY MAT_ALF_PE, WOB, START_DATE, PEDW_START_DATE

)
WITH NO DATA
DISTRIBUTE BY HASH(MAT_ALF_PE);

INSERT INTO SAILW1515V.FLAT_TABLE_MASTER ( 
SELECT *
FROM SAILW1515V.FLAT_TABLE_PREP F
WHERE (WOB >= START_DATE) 
		OR (CHILD_ID_PE NOT IN (
			SELECT CHILD_ID_PE 
			FROM SAILW1515V.FLAT_TABLE_PREP
			WHERE WOB >= START_DATE))
	ORDER BY MAT_ALF_PE, WOB, START_DATE, PEDW_START_DATE

);

------------------------------------------------
-- Test that worked, by checking against numbers from original births table calculated earlier/above:
SELECT COUNT (DISTINCT TMP.MAT_ALF_PE) FROM (
	SELECT * FROM SAILW1515V.FLAT_TABLE_MASTER
	ORDER BY MAT_ALF_PE) AS TMP;
-- Should be 658,057

-- Check number of mother child pairs
SELECT DISTINCT MAT_ALF_PE, CHILD_ID_PE
FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP
WHERE MAT_ALF_PE IS NOT NULL
ORDER BY CHILD_ID_PE;
-- 1,228,803
-- Where MAT_ALF_PE is not NULL

SELECT DISTINCT MAT_ALF_PE, CHILD_ID_PE 
FROM SAILW1515V.FLAT_TABLE_MASTER
ORDER BY MAT_ALF_PE;
-- 1,228,803 rows (distinct mother and child rows, ie. total birth count from all recorded deliveries)

SELECT DISTINCT MAT_ALF_PE, CHILD_ID_PE 
FROM SAILW1515V.FLAT_TABLE_PREP
	ORDER BY MAT_ALF_PE;
-- 1,228,803

SELECT * 
FROM SAILW1515V.FLAT_TABLE_MASTER
ORDER BY MAT_ALF_PE, WOB, START_DATE, PEDW_START_DATE;
-- But now fewer rows than before, 9,794,025  - hopefully this is a bit quicker to read into R now.
-- Save this output as flat_table_all_del.csv in S:\1515 - Postpartum psychosis- physical and mental comorbidity in a national linked d\Exports_from_Eclipse
-- Right click results view and click on Export data


-- If it works drop any intermediate tables:
DROP TABLE SAILW1515V.PEDW_ETH_TMP;
DROP TABLE SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_TMP;
DROP TABLE SAILW1515V.PEDW_SINGLE_DIAG_SUBSET_ETH_TMP; 
DROP TABLE SAILW1515V.NCCH_CHILD_BIRTHS_20221101_DEL_NUM_TMP;
DROP TABLE SAILW1515V.NCCH_PEDW_TMP;
DROP TABLE SAILW1515V.NCCH_PEDW_ADDE_TMP;
DROP TABLE SAILW1515V.FLAT_TABLE_PREP;

----------------------------------------------------
-- Save first deliveries only
----------------------------------------------------

SELECT COUNT(DISTINCT CHILD_ID_PE)
FROM  SAILW1515V.FLAT_TABLE_MASTER
WHERE DELIVERY_NUM = 1;
-- 669,096

SELECT *
FROM  SAILW1515V.FLAT_TABLE_MASTER
WHERE DELIVERY_NUM = 1;
-- Save this output as flat_table_first_del.csv in S:\1515 - Postpartum psychosis- physical and mental comorbidity in a national linked d\Exports_from_Eclipse
-- Right click results view and click on Export data
-- 4,194,431 rows

----------------------------------------------------
-- NOTES AND WORKINGS:
----------------------------------------------------
-- Workings for columns that were tricky to derive:
-- TOT_BIRTH_NUM_DERIVED: derive this ourselves from a count of child IDs for each distinct mother and WOB combination

-- Below numbers may be slightly off (AES 23/05/2024)

SELECT FLT_TAB.MAT_ALF_PE,  FLT_TAB.WOB, FLT_TAB.CHILD_ID_PE, FLT_TAB.TOT_BIRTH_NUM,
	(SELECT COUNT(DISTINCT SELF_TMP.CHILD_ID_PE )
	FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_FIRST_TMP AS SELF_TMP
	WHERE FLT_TAB.MAT_ALF_PE = SELF_TMP.MAT_ALF_PE
		AND FLT_TAB.WOB = SELF_TMP.WOB
	) AS TOT_BIRTH_NUM_DERIVED
FROM SAILW1515V.FLAT_TABLE_PREP AS FLT_TAB
ORDER BY MAT_ALF_PE, WOB;

-- Count how many times the column provided does not match the column we have derived:
SELECT COUNT(DISTINCT COALESCE(TMP.MAT_ALF_PE, TMP.WOB_NUM))
FROM (SELECT FLT_TAB.MAT_ALF_PE,  FLT_TAB.WOB, FLT_TAB.CHILD_ID_PE, FLT_TAB.TOT_BIRTH_NUM,
		DAYS(FLT_TAB.WOB) AS WOB_NUM,
 		(SELECT COUNT(DISTINCT SELF_TMP.CHILD_ID_PE )
		FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_FIRST_TMP AS SELF_TMP
		WHERE FLT_TAB.MAT_ALF_PE = SELF_TMP.MAT_ALF_PE
			AND FLT_TAB.WOB = SELF_TMP.WOB
		) AS TOT_BIRTH_NUM_DERIVED
	FROM SAILW1515V.FLAT_TABLE_PREP AS FLT_TAB
) AS TMP
WHERE TMP.TOT_BIRTH_NUM_DERIVED <> TMP.TOT_BIRTH_NUM AND
TMP.MAT_ALF_PE IS NOT NULL;
-- Returns 3,817

-- Count how many times the column provided does match the column we have derived:
SELECT COUNT(DISTINCT COALESCE(TMP.MAT_ALF_PE, TMP.WOB_NUM))
FROM (SELECT FLT_TAB.MAT_ALF_PE,  FLT_TAB.WOB, FLT_TAB.CHILD_ID_PE, FLT_TAB.TOT_BIRTH_NUM,
		DAYS(FLT_TAB.WOB) AS WOB_NUM,
 		(SELECT COUNT(DISTINCT SELF_TMP.CHILD_ID_PE )
		FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_FIRST_TMP AS SELF_TMP
		WHERE FLT_TAB.MAT_ALF_PE = SELF_TMP.MAT_ALF_PE
			AND FLT_TAB.WOB = SELF_TMP.WOB
		) AS TOT_BIRTH_NUM_DERIVED
	FROM SAILW1515V.FLAT_TABLE_PREP AS FLT_TAB
) AS TMP
WHERE TMP.TOT_BIRTH_NUM_DERIVED = TMP.TOT_BIRTH_NUM AND
TMP.MAT_ALF_PE IS NOT NULL;
-- Returns 647,120

-- Not entirely sure this is correct as total number doesn't add up. We can check this again in R to be sure.

-- What are the highest numbers for births per first delivery
SELECT *
FROM (SELECT FLT_TAB.MAT_ALF_PE,  FLT_TAB.WOB, FLT_TAB.CHILD_ID_PE, FLT_TAB.TOT_BIRTH_NUM,
		DAYS(FLT_TAB.WOB) AS WOB_NUM,
 		(SELECT COUNT(DISTINCT SELF_TMP.CHILD_ID_PE )
		FROM SAILW1515V.NCCH_CHILD_BIRTHS_20221101_FIRST_TMP AS SELF_TMP
		WHERE FLT_TAB.MAT_ALF_PE = SELF_TMP.MAT_ALF_PE
			AND FLT_TAB.WOB = SELF_TMP.WOB
		) AS TOT_BIRTH_NUM_DERIVED
	FROM SAILW1515V.FLAT_TABLE_PREP AS FLT_TAB
) AS TMP
ORDER BY TMP.TOT_BIRTH_NUM_DERIVED DESC;

------------
---- Check physical health comorbidities
-- Check ICD-10 codes in reference table are correct
-- Katie, please check ICD10 reference table in Create_ref_tables.sql
SELECT NCCH_PEDW.DIAG_CD_1234,COUNT(NCCH_PEDW.DIAG_CD_1234)
FROM SAILW1515V.NCCH_PEDW_TMP AS NCCH_PEDW
JOIN SAILW1515V.REF_ICD10_PHYSICAL_HEALTH CODES ON NCCH_PEDW.DIAG_CD_1234 = CODES.ENDOMET
GROUP BY NCCH_PEDW.DIAG_CD_1234
ORDER BY NCCH_PEDW.DIAG_CD_1234;


SELECT NCCH_PEDW.DIAG_CD_1234,COUNT(NCCH_PEDW.DIAG_CD_1234)
FROM SAILW1515V.NCCH_PEDW_TMP AS NCCH_PEDW
WHERE NCCH_PEDW.DIAG_CD_1234 LIKE 'N%'
GROUP BY NCCH_PEDW.DIAG_CD_1234
ORDER BY NCCH_PEDW.DIAG_CD_1234;

------------
-- Further QC checks are conducted in the next script in this pipeline: Scripts/Data_Checks_R/QC_all_deliveries.Rmd
